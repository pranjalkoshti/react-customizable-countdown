[{"/home/pranjal/work/packages/react-customizable-countdown/src/index.js":"1","/home/pranjal/work/packages/react-customizable-countdown/src/App.js":"2","/home/pranjal/work/packages/react-customizable-countdown/src/reportWebVitals.js":"3","/home/pranjal/work/packages/react-customizable-countdown/src/components/timerSegment.js":"4"},{"size":74,"mtime":1609504535277,"results":"5","hashOfConfig":"6"},{"size":500,"mtime":1609503268460,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609496380825,"results":"8","hashOfConfig":"6"},{"size":2656,"mtime":1609503024108,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gug2jr",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"/home/pranjal/work/packages/react-customizable-countdown/src/index.js",[],"/home/pranjal/work/packages/react-customizable-countdown/src/App.js",[],"/home/pranjal/work/packages/react-customizable-countdown/src/reportWebVitals.js",[],"/home/pranjal/work/packages/react-customizable-countdown/src/components/timerSegment.js",["20"],"import { Component, Fragment } from \"react\";\n\nclass TimerSegment extends Component {\n\n  defaultDate = new Date(new Date().setDate(new Date().getDate()+1))\n\n  leadingZero(num) {\n    return num < 10 ? \"0\" + num : num;\n  }\n\n  getTimeUntil(deadline) {\n    const time =\n      Date.parse(deadline) - Date.parse(new Date());\n\n    if (time < 0) {\n      this.setState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    } else {\n      const seconds = Math.floor((time / 1000) % 60);\n      const minutes = Math.floor((time / 1000 / 60) % 60);\n      const hours = Math.floor((time / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\n      this.setState({ days, hours, minutes, seconds });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      deadline: this.props.date ? this.props.date : this.defaultDate\n      // deadline: this.props.date ? this.props.date : \"April, 6, 2019\"\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => this.getTimeUntil(this.state.deadline), 1000);\n  }\n\n  render() {\n    const { days, hours, minutes, seconds } = this.state;\n    let counterStyle = this.props.counterStyle ? this.props.counterStyle  : {};\n    let timerStyle = this.props.timerStyle ? this.props.timerStyle : {};\n    let labelStyle = this.props.labelStyle ? this.props.labelStyle : {};\n\n    return (\n      <div style={timerStyle} >\n          <div style={{padding:'0px',textAlign:'center', height:'100%',background:'none'}}  >\n            <p style={{color: labelStyle.color ? labelStyle.color : 'grey', marginBottom:'0px'}}>STARTS IN</p>\n            <div style={{display:'flex'}}>\n                <div style={{flex:1}}>\n                    <h1 className=\"timer-counter\" style={counterStyle}>{this.leadingZero(days)}</h1>\n                    <p style={labelStyle}>DAYS</p>\n                </div>\n                <div style={{flex:1}}>\n                    <h1 className=\"timer-counter\" style={counterStyle}>{this.leadingZero(hours)}</h1>\n                    <p style={labelStyle}>HOURS</p>\n                </div>\n                <div style={{flex:1}}>\n                    <h1 className=\"timer-counter\" style={counterStyle}>{this.leadingZero(minutes)}</h1>\n                    <p style={labelStyle}>MINUTES</p>\n                </div>\n                <div style={{flex:1}}>\n                    <h1 className=\"timer-counter\" style={counterStyle}>{this.leadingZero(seconds)}</h1>\n                    <p style={labelStyle}>SECONDS</p>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n  }\n}\n\nexport default TimerSegment;\n",["21","22"],{"ruleId":"23","severity":1,"message":"24","line":1,"column":21,"nodeType":"25","messageId":"26","endLine":1,"endColumn":29},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-global-assign","no-unsafe-negation"]